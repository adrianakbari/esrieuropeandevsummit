---

# Need 2 steps, known issue with ansible. See for example https://github.com/xsnippet/xsnippet-infra/pull/26/commits/04b0c74870a15429f71e924600135bba8948f3ee

- name: portal_start_check_existance_of_installation_sources
  stat:
    path: /data/installsource/PortalForArcGIS
  register: installsourcePortal

- name: First download Portal_for_ArcGIS tar file 
  get_url:
    url: "https://gisautomation.s3.eu-central-1.amazonaws.com/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz"
    dest: "/data/tmp/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz"
    tmp_dest: /data/tmp
  when: not installsourcePortal.stat.exists

# - name: Copy install files 
#   copy:
#     src: /data/ansible/files/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz
#     dest: /data/tmp/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz
#     owner: azureuser
#     group: azureuser
#     mode: '0640'
#   when: not installsourcePortal.stat.exists

- name: Extract Portal_for_ArcGIS tar file
  unarchive:
    src: /data/tmp/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz
    dest: /data/installsource
    remote_src: true
  when: not installsourcePortal.stat.exists

- name: Cleanup Portal_for_ArcGIS tar.gz file
  file:
    state: absent
    path: "/data/tmp/Portal_for_ArcGIS_Linux_{{ arcgisportfileversion }}.tar.gz"

- name: Copy authorization keyfiles for testing (8 named users)
  copy:
    src: /data/ansible/files/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
    dest: /data/installsource/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
    owner: azureuser
    group: azureuser
    mode: '0640'
  when: versie == "test" or versie == "testx"

# - name: Copy authorization keyfiles for prod (3000 lvl 1 users and 25 named users)
#   copy:
#     src: roles/portal/files/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
#     dest: /data/installsource/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
#     owner: azureuser
#     group: azureuser
#     mode: '0640'
#   when: versie == "acceptatie"

# - name: Copy authorization keyfiles for prod (3000 lvl 1 users and 25 named users)
#   copy:
#     src: roles/portal/files/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
#     dest: /data/installsource/ArcGIS_Enterprise_Portal_{{ arcgisportkeyfileversion }}.json
#     owner: azureuser
#     group: azureuser
#     mode: '0640'
#   when: versie == "prod"

- name: Copy portalcreation script
  copy:
    src: roles/portal/files/createportaltest.properties
    dest: /data/installsource/createportaltest.properties
    owner: azureuser
    group: azureuser
    mode: '0640'
  when: versie == "test"

# - name: Copy portalcreation script
#   copy:
#     src: roles/portal/files/createportalacc.properties
#     dest: /data/installsource/createportalacc.properties
#     owner: azureuser
#     group: azureuser
#     mode: '0640'
#   when: versie == "acceptatie"


# - name: Copy portalcreation script
#   copy:
#     src: roles/portal/files/createportalprd.properties
#     dest: /data/installsource/createportalprd.properties
#     owner: azureuser
#     group: azureuser
#     mode: '0640'
#   when: versie == "prod"

- name: Install PortalForArcGIS
  shell: cd /data/installsource/PortalForArcGIS/;./Setup -m silent -l yes -d /data 2>&1| tee /data/tmp/install.log
  become_user: azureuser
  args:
    creates: /data/arcgis/portal/startportal.sh
  register: installedportalarcgis

- name: portal installation debug
  debug:
    var: installedportalarcgis

- name: Stop PortalForArcGIS after installation
  shell: /data/arcgis/portal/stopportal.sh
  become_user: azureuser
  when: installedportalarcgis.changed

- name: Copy portal service file to enable the arcgis service
  copy:
    src: /data/arcgis/portal/framework/etc/arcgisportal.service
    remote_src: yes
    dest: /etc/systemd/system
    mode: '600'

- name: Check if service is disabled
  shell: "sudo systemctl status arcgisportal|grep Loaded|grep '; disabled;'|wc -l"
  args:
    warn: false
  register: arcgisportal_disabled
  changed_when: false

- name: Enable service if disabled
  shell: sudo systemctl enable arcgisportal
  args:
    warn: false
  when: arcgisportal_disabled.stdout|int == 1

- name: Check if service is running
  shell: "systemctl status arcgisportal|grep Active:|grep 'active (running)'|wc -l"
  args:
    warn: false
  register: arcgisportal_isrunning
  changed_when: false

- name: Start service if it is not running
  shell: sudo systemctl start arcgisportal
  args:
    warn: false
  when: arcgisportal_isrunning.stdout|int == 0

- name: wait for portal to start
  wait_for: timeout=30
  when: installedportalarcgis.changed

- name: Check if portaladmin is created by checking existing conf file
  stat:
    path: /data/arcgis/portal/framework/etc/config-store-connection.json
  register: stat_result

- name: Create portaladmin account
  shell: "/data/arcgis/portal/tools/createportal/createportal.sh -f /data/installsource/createportaltest.properties"
  become_user: azureuser
  register: createportaladmin
  when: installedportalarcgis.changed and versie == "test"
  #when: stat_result.stat.exists == False

- name: portal creation debug
  debug:
    var: createportaladmin

